/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DeterministicFactory,
  DeterministicFactoryInterface,
} from "../../../contracts/DeterministicFactory.sol/DeterministicFactory";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isLogic",
        type: "bool",
      },
    ],
    name: "ContractCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "code",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "createLogic",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "call",
        type: "bytes",
      },
    ],
    name: "createProxy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "code",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "determineLogicAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "determineProxyAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b0319163317905560405161002f90610071565b604051809103906000f08015801561004b573d6000803e3d6000fd5b50600280546001600160a01b0319166001600160a01b039290921691909117905561007e565b610ae880610b2a83390190565b610a9d8061008d6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630492e49314610051578063205f8342146100805780633e36e51c14610093578063dda39c081461011e575b600080fd5b61006461005f36600461083b565b610131565b6040516001600160a01b03909116815260200160405180910390f35b61006461008e3660046108f7565b6101bd565b6100646100a13660046108f7565b8151602092830120604080517fff00000000000000000000000000000000000000000000000000000000000000818601526bffffffffffffffffffffffff193060601b166021820152603581019390935260558084019290925280518084039092018252607590920190915280519101206001600160a01b031690565b61006461012c36600461093c565b61025e565b60006101b761013e610386565b8051602091820120604080517fff00000000000000000000000000000000000000000000000000000000000000818501523060601b6bffffffffffffffffffffffff191660218201526035810187905260558082019390935281518082039093018352607501905280519101206001600160a01b031690565b92915050565b600080546001600160a01b03163314806101d957506000600154115b6101e257600080fd5b6001600081546101f1906109b7565b9091555060006102018484610812565b604051600181529091506001600160a01b038216907f8bc3e5adcf79834694ea9a3bc347edb046015ae83ad0c26c4008921aed0ee31d9060200160405180910390a29050600160008154610254906109d2565b9091555092915050565b600080546001600160a01b031633148061027a57506000600154115b61028357600080fd5b600160008154610292906109b7565b9091555060006102a0610386565b905060006102ae8286610812565b6040517f4f1ef2860000000000000000000000000000000000000000000000000000000081529091506001600160a01b03821690634f1ef286906102f890899088906004016109e9565b600060405180830381600087803b15801561031257600080fd5b505af1158015610326573d6000803e3d6000fd5b5050604051600081526001600160a01b03841692507f8bc3e5adcf79834694ea9a3bc347edb046015ae83ad0c26c4008921aed0ee31d915060200160405180910390a291505060016000815461037b906109d2565b909155509392505050565b6002546060906044906102fa907f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc906001600160a01b031660006103ca8486610a4f565b67ffffffffffffffff8111156103e2576103e2610854565b6040519080825280601f01601f19166020018201604052801561040c576020820181803683370190505b507f7f0000000000000000000000000000000000000000000000000000000000000060208281019190915260218201949094529490921b60389390931b60589190911b01919091017f7300000000000000000000000000000000000000005561000080600060003960016041830152507ef300000000000000000000000000000000000000000000000000000000000060618201527f60806040523661001357610011610017565b005b6100115b610027610022610060648201527f74565b6100b9565b565b606061004e838360405180606001604052806027815260848201527f6020016102fb602791396100dd565b9392505050565b73ffffffffffffffffff60a48201527fffffffffffffffffffffff163b151590565b90565b60006100b47f360894a13b60c48201527fa1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffff60e48201526ee96fa9a46faf6fa9a4c99fff7fc89f196101048201527e80366000845af43d6000803e8080156100d8573d6000f35b3d6000fd5b60606101248201527f73ffffffffffffffffffffffffffffffffffffffff84163b610188576040517f6101448201527f08c379a0000000000000000000000000000000000000000000000000000000006101648201527f815260206004820152602660248201527f416464726573733a2064656c6567616101848201527f74652063616c6c20746f206e6f6e2d636f60448201527f6e74726163740000006101a48201526860648201526084015b6101c48201527f60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffff6101e48201527fffff16856040516101b0919061028d565b600060405180830381855af49150506102048201527f3d80600081146101eb576040519150601f19603f3d011682016040523d82523d6102248201527f6000602084013e6101f0565b606091505b509150915061020082828661020a566102448201527f5b9695505050505050565b6060831561021957508161004e565b8251156102296102648201527f5782518084602001fd5b816040517f08c379a00000000000000000000000000061028482015270815260040161017f91906102a9565b60006102a48201527f5b83811015610278578181015183820152602001610260565b838111156102876102c48201527f576000848401525b50505050565b6000825161029f81846020870161025d565b6102e48201527f9190910192915050565b60208152600082518060208401526102c881604085016103048201527f6020870161025d565b601f017fffffffffffffffffffffffffffffffffffffff6103248201527fffffffffffffffffffffffffe016919091016040019291505056000000000000610344820152919050565b815160009083908390839082906020850183f59050803b61083257600080fd5b95945050505050565b60006020828403121561084d57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261087b57600080fd5b813567ffffffffffffffff8082111561089657610896610854565b604051601f8301601f19908116603f011681019082821181831017156108be576108be610854565b816040528381528660208588010111156108d757600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561090a57600080fd5b823567ffffffffffffffff81111561092157600080fd5b61092d8582860161086a565b95602094909401359450505050565b60008060006060848603121561095157600080fd5b83356001600160a01b038116811461096857600080fd5b925060208401359150604084013567ffffffffffffffff81111561098b57600080fd5b6109978682870161086a565b9150509250925092565b634e487b7160e01b600052601160045260246000fd5b60006000198214156109cb576109cb6109a1565b5060010190565b6000816109e1576109e16109a1565b506000190190565b6001600160a01b038316815260006020604081840152835180604085015260005b81811015610a2657858101830151858201606001528201610a0a565b81811115610a38576000606083870101525b50601f01601f191692909201606001949350505050565b60008219821115610a6257610a626109a1565b50019056fea26469706673582212205fe336537cdd54e6c0c63533f2bb1f2514550f24d9a6c29a66df1743161e8d9c64736f6c6343000809003360a06040523060805234801561001457600080fd5b50608051610a9d61004b6000396000818160a00152818161012a015281816102180152818161029d015261037e0152610a9d6000f3fe6080604052600436106100345760003560e01c80633659cfe6146100395780634f1ef2861461005b57806352d1902d1461006e575b600080fd5b34801561004557600080fd5b506100596100543660046108a0565b610095565b005b6100596100693660046108ea565b61020d565b34801561007a57600080fd5b50610083610371565b60405190815260200160405180910390f35b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156101285760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b60648201526084015b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166101837f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b0316146101ee5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b606482015260840161011f565b6040805160008082526020820190925261020a91839190610436565b50565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561029b5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b606482015260840161011f565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166102f67f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b0316146103615760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b606482015260840161011f565b61036d82826001610436565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104115760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000606482015260840161011f565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561046e57610469836105ea565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104a757600080fd5b505afa9250505080156104d7575060408051601f3d908101601f191682019092526104d4918101906109ac565b60015b6105495760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f742055555053000000000000000000000000000000000000606482015260840161011f565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc81146105de5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c65555549440000000000000000000000000000000000000000000000606482015260840161011f565b506104698383836106c0565b6001600160a01b0381163b6106675760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e747261637400000000000000000000000000000000000000606482015260840161011f565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6106c9836106eb565b6000825111806106d65750805b15610469576106e5838361072b565b50505050565b6106f4816105ea565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606107508383604051806060016040528060278152602001610a4160279139610757565b9392505050565b60606001600160a01b0384163b6107d65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e74726163740000000000000000000000000000000000000000000000000000606482015260840161011f565b600080856001600160a01b0316856040516107f191906109f1565b600060405180830381855af49150503d806000811461082c576040519150601f19603f3d011682016040523d82523d6000602084013e610831565b606091505b509150915061084182828661084b565b9695505050505050565b6060831561085a575081610750565b82511561086a5782518084602001fd5b8160405162461bcd60e51b815260040161011f9190610a0d565b80356001600160a01b038116811461089b57600080fd5b919050565b6000602082840312156108b257600080fd5b61075082610884565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080604083850312156108fd57600080fd5b61090683610884565b9150602083013567ffffffffffffffff8082111561092357600080fd5b818501915085601f83011261093757600080fd5b813581811115610949576109496108bb565b604051601f8201601f19908116603f01168101908382118183101715610971576109716108bb565b8160405282815288602084870101111561098a57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000602082840312156109be57600080fd5b5051919050565b60005b838110156109e05781810151838201526020016109c8565b838111156106e55750506000910152565b60008251610a038184602087016109c5565b9190910192915050565b6020815260008251806020840152610a2c8160408501602087016109c5565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220570b1cb83bff365199987f95f3adeb77cf4da4e61cf7ecbde2a5c2e314cfc5bd64736f6c63430008090033";

type DeterministicFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DeterministicFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DeterministicFactory__factory extends ContractFactory {
  constructor(...args: DeterministicFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DeterministicFactory> {
    return super.deploy(overrides || {}) as Promise<DeterministicFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DeterministicFactory {
    return super.attach(address) as DeterministicFactory;
  }
  override connect(signer: Signer): DeterministicFactory__factory {
    return super.connect(signer) as DeterministicFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeterministicFactoryInterface {
    return new utils.Interface(_abi) as DeterministicFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DeterministicFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DeterministicFactory;
  }
}
