/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IPool,
  IPoolInterface,
} from "../../../contracts/interfaces/IPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "inputAmounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "minimumMintAmount",
        type: "uint256",
      },
    ],
    name: "add",
    outputs: [
      {
        internalType: "uint256",
        name: "mintAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getState",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "paused",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddres",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
              },
            ],
            internalType: "struct TokenBalance[]",
            name: "balances",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddres",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
              },
            ],
            internalType: "struct TokenBalance",
            name: "totalLPSupply",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
            ],
            internalType: "struct Decimal",
            name: "ampFactor",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
            ],
            internalType: "struct Decimal",
            name: "lpFee",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
            ],
            internalType: "struct Decimal",
            name: "governanceFee",
            type: "tuple",
          },
        ],
        internalType: "struct PoolState",
        name: "state",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "burnAmount",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "outputTokenIndex",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "minimumOutputAmount",
        type: "uint256",
      },
    ],
    name: "removeExactBurn",
    outputs: [
      {
        internalType: "uint256",
        name: "outputAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "outputAmounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "maximumBurnAmount",
        type: "uint256",
      },
    ],
    name: "removeExactOutput",
    outputs: [
      {
        internalType: "uint256",
        name: "burnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "burnAmount",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "minimumOutputAmounts",
        type: "uint256[]",
      },
    ],
    name: "removeUniform",
    outputs: [
      {
        internalType: "uint256[]",
        name: "outputAmounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "inputAmount",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "inputTokenIndex",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "outputTokenIndex",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "minimumOutputAmount",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "outputAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "inputAmounts",
        type: "uint256[]",
      },
      {
        internalType: "uint8",
        name: "outputTokenIndex",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "minimumOutputAmount",
        type: "uint256",
      },
    ],
    name: "swapExactInput",
    outputs: [
      {
        internalType: "uint256",
        name: "outputAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maximumInputAmount",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "inputTokenIndex",
        type: "uint8",
      },
      {
        internalType: "uint256[]",
        name: "outputAmounts",
        type: "uint256[]",
      },
    ],
    name: "swapExactOutput",
    outputs: [
      {
        internalType: "uint256",
        name: "inputAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IPool__factory {
  static readonly abi = _abi;
  static createInterface(): IPoolInterface {
    return new utils.Interface(_abi) as IPoolInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IPool {
    return new Contract(address, _abi, signerOrProvider) as IPool;
  }
}
