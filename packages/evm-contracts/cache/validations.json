{
  "version": "3.2",
  "log": [
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:18",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "51",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "7174e5e2ef9c09d5bd959b24aa13f9096d890141dd886d3335e4efca2e9f5584",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "1e9b5fa88b823ee6da03e33f878f1e8776a135eae3f56059edf447b11312bd6d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "014a5a29a6b1c808eb647e375faf21336a851cf65c9484e712d675c6b1c2d0b6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "ad14a9d33d9c25c04abd63a554e69698b2629fe1eddc374b26c6026f9314a61d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Routing": {
        "src": "contracts/Routing.sol:19",
        "version": {
          "withMetadata": "1e061949f0188a206b4d46698da61b1e9b317346aafa19f9beb7d9b1ed04bf22",
          "withoutMetadata": "c043371432e2cf9336c52674b749cf90840dc7b5ccf9047e3d0bb7995cdf7a0a",
          "linkedWithoutMetadata": "c043371432e2cf9336c52674b749cf90840dc7b5ccf9047e3d0bb7995cdf7a0a"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ReentrancyGuardUpgradeable",
          "OwnableUpgradeable",
          "PausableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "IRouting"
        ],
        "libraries": [
          "SwimPayload",
          "SafeERC20"
        ],
        "methods": [
          "initialize(address)",
          "pause()",
          "unpause()",
          "onChainSwap(address,uint256,address,address,uint256)",
          "swapAndTransfer(address,uint256,uint256,uint16,bytes32)",
          "receiveAndSwap(bytes,address,uint256)",
          "receiveAndSwap(bytes)",
          "registerToken(uint16,address,address,uint8)",
          "getPoolStates(address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "51",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "151",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "201",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "251",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "wormholeNonce",
              "offset": 0,
              "slot": "301",
              "type": "t_uint32",
              "contract": "Routing",
              "src": "contracts/Routing.sol:33"
            },
            {
              "label": "swimUsdAddress",
              "offset": 4,
              "slot": "301",
              "type": "t_address",
              "contract": "Routing",
              "src": "contracts/Routing.sol:34"
            },
            {
              "label": "tokenBridge",
              "offset": 0,
              "slot": "302",
              "type": "t_contract(ITokenBridge)3543",
              "contract": "Routing",
              "src": "contracts/Routing.sol:36"
            },
            {
              "label": "wormhole",
              "offset": 0,
              "slot": "303",
              "type": "t_contract(IWormhole)3670",
              "contract": "Routing",
              "src": "contracts/Routing.sol:37"
            },
            {
              "label": "tokenNumberMapping",
              "offset": 0,
              "slot": "304",
              "type": "t_mapping(t_uint16,t_struct(TokenInfo)2226_storage)",
              "contract": "Routing",
              "src": "contracts/Routing.sol:46"
            },
            {
              "label": "tokenAddressMapping",
              "offset": 0,
              "slot": "305",
              "type": "t_mapping(t_address,t_struct(TokenInfo)2226_storage)",
              "contract": "Routing",
              "src": "contracts/Routing.sol:47"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ITokenBridge)3543": {
              "label": "contract ITokenBridge",
              "numberOfBytes": "20"
            },
            "t_contract(IWormhole)3670": {
              "label": "contract IWormhole",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(TokenInfo)2226_storage)": {
              "label": "mapping(address => struct Routing.TokenInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_struct(TokenInfo)2226_storage)": {
              "label": "mapping(uint16 => struct Routing.TokenInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(TokenInfo)2226_storage": {
              "label": "struct Routing.TokenInfo",
              "members": [
                {
                  "label": "tokenNumber",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenAddress",
                  "type": "t_address",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "poolAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenIndexInPool",
                  "type": "t_uint8",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SwimPayload": {
        "src": "contracts/SwimPayload.sol:11",
        "version": {
          "withMetadata": "9a4727276eb87cd8c4c200608cdc1af4c31b16624de72bbd95f887e5f4f26aa1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPool": {
        "src": "contracts/interfaces/IPool.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getState()",
          "swap(uint256,uint8,uint8,uint256)",
          "swapExactOutput(uint256,uint8,uint256[])",
          "swapExactInput(uint256[],uint8,uint256)",
          "removeExactBurn(uint256,uint8,uint256)",
          "removeExactOutput(uint256[],uint256)",
          "add(uint256[],uint256)",
          "removeUniform(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IRouting": {
        "src": "contracts/interfaces/IRouting.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onChainSwap(address,uint256,address,address,uint256)",
          "swapAndTransfer(address,uint256,uint256,uint16,bytes32)",
          "receiveAndSwap(bytes,address,uint256)",
          "receiveAndSwap(bytes)",
          "registerToken(uint16,address,address,uint8)",
          "getPoolStates(address[])",
          "swimUsdAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStructs": {
        "src": "contracts/interfaces/IStructs.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITokenBridge": {
        "src": "contracts/interfaces/ITokenBridge.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferTokensWithPayload(address,uint256,uint16,bytes32,uint32,bytes)",
          "transferTokens(address,uint256,uint16,bytes32,uint256,uint32)",
          "completeTransferWithPayload(bytes)",
          "wrappedAsset(uint16,bytes32)",
          "wormhole()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWormhole": {
        "src": "contracts/interfaces/IWormhole.sol:7",
        "inherit": [
          "IStructs"
        ],
        "libraries": [],
        "methods": [
          "publishMessage(uint32,bytes,uint8)",
          "parseAndVerifyVM(bytes)",
          "verifyVM((uint8,uint32,uint32,uint16,bytes32,uint64,uint8,bytes,uint32,struct IStructs.Signature[],bytes32))",
          "verifySignatures(bytes32,struct IStructs.Signature[],(address[],uint32))",
          "parseVM(bytes)",
          "getGuardianSet(uint32)",
          "getCurrentGuardianSetIndex()",
          "getGuardianSetExpiry()",
          "governanceActionIsConsumed(bytes32)",
          "isInitialized(address)",
          "chainId()",
          "governanceChainId()",
          "governanceContract()",
          "messageFee()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:18",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "51",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "7174e5e2ef9c09d5bd959b24aa13f9096d890141dd886d3335e4efca2e9f5584",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "1e9b5fa88b823ee6da03e33f878f1e8776a135eae3f56059edf447b11312bd6d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "014a5a29a6b1c808eb647e375faf21336a851cf65c9484e712d675c6b1c2d0b6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "ad14a9d33d9c25c04abd63a554e69698b2629fe1eddc374b26c6026f9314a61d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Routing": {
        "src": "contracts/Routing.sol:19",
        "version": {
          "withMetadata": "1e061949f0188a206b4d46698da61b1e9b317346aafa19f9beb7d9b1ed04bf22",
          "withoutMetadata": "c043371432e2cf9336c52674b749cf90840dc7b5ccf9047e3d0bb7995cdf7a0a",
          "linkedWithoutMetadata": "c043371432e2cf9336c52674b749cf90840dc7b5ccf9047e3d0bb7995cdf7a0a"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ReentrancyGuardUpgradeable",
          "OwnableUpgradeable",
          "PausableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "IRouting"
        ],
        "libraries": [
          "SwimPayload",
          "SafeERC20"
        ],
        "methods": [
          "initialize(address)",
          "pause()",
          "unpause()",
          "onChainSwap(address,uint256,address,address,uint256)",
          "swapAndTransfer(address,uint256,uint256,uint16,bytes32)",
          "receiveAndSwap(bytes,address,uint256)",
          "receiveAndSwap(bytes)",
          "registerToken(uint16,address,address,uint8)",
          "getPoolStates(address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "51",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "151",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "201",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "251",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "wormholeNonce",
              "offset": 0,
              "slot": "301",
              "type": "t_uint32",
              "contract": "Routing",
              "src": "contracts/Routing.sol:33"
            },
            {
              "label": "swimUsdAddress",
              "offset": 4,
              "slot": "301",
              "type": "t_address",
              "contract": "Routing",
              "src": "contracts/Routing.sol:34"
            },
            {
              "label": "tokenBridge",
              "offset": 0,
              "slot": "302",
              "type": "t_contract(ITokenBridge)3543",
              "contract": "Routing",
              "src": "contracts/Routing.sol:36"
            },
            {
              "label": "wormhole",
              "offset": 0,
              "slot": "303",
              "type": "t_contract(IWormhole)3670",
              "contract": "Routing",
              "src": "contracts/Routing.sol:37"
            },
            {
              "label": "tokenNumberMapping",
              "offset": 0,
              "slot": "304",
              "type": "t_mapping(t_uint16,t_struct(TokenInfo)2226_storage)",
              "contract": "Routing",
              "src": "contracts/Routing.sol:46"
            },
            {
              "label": "tokenAddressMapping",
              "offset": 0,
              "slot": "305",
              "type": "t_mapping(t_address,t_struct(TokenInfo)2226_storage)",
              "contract": "Routing",
              "src": "contracts/Routing.sol:47"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ITokenBridge)3543": {
              "label": "contract ITokenBridge",
              "numberOfBytes": "20"
            },
            "t_contract(IWormhole)3670": {
              "label": "contract IWormhole",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(TokenInfo)2226_storage)": {
              "label": "mapping(address => struct Routing.TokenInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_struct(TokenInfo)2226_storage)": {
              "label": "mapping(uint16 => struct Routing.TokenInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(TokenInfo)2226_storage": {
              "label": "struct Routing.TokenInfo",
              "members": [
                {
                  "label": "tokenNumber",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenAddress",
                  "type": "t_address",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "poolAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenIndexInPool",
                  "type": "t_uint8",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SwimPayload": {
        "src": "contracts/SwimPayload.sol:11",
        "version": {
          "withMetadata": "9a4727276eb87cd8c4c200608cdc1af4c31b16624de72bbd95f887e5f4f26aa1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPool": {
        "src": "contracts/interfaces/IPool.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getState()",
          "swap(uint256,uint8,uint8,uint256)",
          "swapExactOutput(uint256,uint8,uint256[])",
          "swapExactInput(uint256[],uint8,uint256)",
          "removeExactBurn(uint256,uint8,uint256)",
          "removeExactOutput(uint256[],uint256)",
          "add(uint256[],uint256)",
          "removeUniform(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IRouting": {
        "src": "contracts/interfaces/IRouting.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onChainSwap(address,uint256,address,address,uint256)",
          "swapAndTransfer(address,uint256,uint256,uint16,bytes32)",
          "receiveAndSwap(bytes,address,uint256)",
          "receiveAndSwap(bytes)",
          "registerToken(uint16,address,address,uint8)",
          "getPoolStates(address[])",
          "swimUsdAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStructs": {
        "src": "contracts/interfaces/IStructs.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITokenBridge": {
        "src": "contracts/interfaces/ITokenBridge.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferTokensWithPayload(address,uint256,uint16,bytes32,uint32,bytes)",
          "transferTokens(address,uint256,uint16,bytes32,uint256,uint32)",
          "completeTransferWithPayload(bytes)",
          "wrappedAsset(uint16,bytes32)",
          "wormhole()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWormhole": {
        "src": "contracts/interfaces/IWormhole.sol:7",
        "inherit": [
          "IStructs"
        ],
        "libraries": [],
        "methods": [
          "publishMessage(uint32,bytes,uint8)",
          "parseAndVerifyVM(bytes)",
          "verifyVM((uint8,uint32,uint32,uint16,bytes32,uint64,uint8,bytes,uint32,struct IStructs.Signature[],bytes32))",
          "verifySignatures(bytes32,struct IStructs.Signature[],(address[],uint32))",
          "parseVM(bytes)",
          "getGuardianSet(uint32)",
          "getCurrentGuardianSetIndex()",
          "getGuardianSetExpiry()",
          "governanceActionIsConsumed(bytes32)",
          "isInitialized(address)",
          "chainId()",
          "governanceChainId()",
          "governanceContract()",
          "messageFee()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:21",
        "inherit": [
          "ERC1967Upgrade",
          "IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:18",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "51",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "a253043fda9b5d1864217155ba6a5d655acd2075d2dfbcd3b6751fe5a793beaf",
          "withoutMetadata": "f3dc1a0f929b1b3284ceb0ba09f08f69b365fcd9b9738f161716f8ddfb6837bc",
          "linkedWithoutMetadata": "f3dc1a0f929b1b3284ceb0ba09f08f69b365fcd9b9738f161716f8ddfb6837bc"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20BurnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:15",
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20BurnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "7174e5e2ef9c09d5bd959b24aa13f9096d890141dd886d3335e4efca2e9f5584",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "1e9b5fa88b823ee6da03e33f878f1e8776a135eae3f56059edf447b11312bd6d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Clones": {
        "src": "@openzeppelin/contracts/proxy/Clones.sol:19",
        "version": {
          "withMetadata": "4e7fb04947ab6cd8986c7a30b78f43e9a31ec4926f242fc3615303850a12b9a9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:19",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "370216adcdae15647427b01ec7542d825573815a8d5a366945878a35752f6225",
          "withoutMetadata": "57931a7443d4193cee69dd61b3d81eee16f677161f872c93f7d6ab2d8b185d2e",
          "linkedWithoutMetadata": "57931a7443d4193cee69dd61b3d81eee16f677161f872c93f7d6ab2d8b185d2e"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "014a5a29a6b1c808eb647e375faf21336a851cf65c9484e712d675c6b1c2d0b6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "ad14a9d33d9c25c04abd63a554e69698b2629fe1eddc374b26c6026f9314a61d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:32",
        "version": {
          "withMetadata": "763aea2f3de564dd5772cacb7c955088a45d35532d11a03b36047715355513bd",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BlankLogic": {
        "src": "contracts/BlankLogic.sol:6",
        "version": {
          "withMetadata": "fecce225bb8f75d898c5b285f2d9e64be3b4972b0d00d6f62d02710b12c96c83",
          "withoutMetadata": "2c819bf26a6c6186fb1a1884f6e6e256415f423914bacd99080c4775f0291217",
          "linkedWithoutMetadata": "2c819bf26a6c6186fb1a1884f6e6e256415f423914bacd99080c4775f0291217"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967Upgrade",
          "IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CenterAlignment": {
        "src": "contracts/CenterAlignment.sol:6",
        "version": {
          "withMetadata": "39f86133c7d22923d8576bdede4c63e9a9435e4ed902da342ce004c2454f6f21",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DeterministicFactory": {
        "src": "contracts/DeterministicFactory.sol:74",
        "version": {
          "withMetadata": "eb55063243b4ef09656befe12ae0421b4bd0713cfdf7c2f6b7364842fde876c8",
          "withoutMetadata": "010983e55929001fdd3f3546524caaf55ce6a1ba5e17aca8b31858d2c69ab829",
          "linkedWithoutMetadata": "010983e55929001fdd3f3546524caaf55ce6a1ba5e17aca8b31858d2c69ab829"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "createLogic(bytes,bytes32)",
          "createProxy(address,bytes32,bytes)",
          "determineLogicAddress(bytes,bytes32)",
          "determineProxyAddress(bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DeterministicFactory",
            "src": "contracts/DeterministicFactory.sol:89"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "DeterministicFactory",
              "src": "contracts/DeterministicFactory.sol:85"
            },
            {
              "label": "reentrancyCount",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DeterministicFactory",
              "src": "contracts/DeterministicFactory.sol:86"
            },
            {
              "label": "blankLogicAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "DeterministicFactory",
              "src": "contracts/DeterministicFactory.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUUPSUpgradeable": {
        "src": "contracts/DeterministicFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Equalize": {
        "src": "contracts/Equalize.sol:8",
        "version": {
          "withMetadata": "ce13e05bb0b77e8a54b8504728bbd5a1f27795c74e545d73db2d88b4c5594fcc",
          "withoutMetadata": "26cfc0cb9508cb1a01456d0d4866f18e5140f51515fe126a1e1c6b03ecf546df",
          "linkedWithoutMetadata": "26cfc0cb9508cb1a01456d0d4866f18e5140f51515fe126a1e1c6b03ecf546df"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Invariant": {
        "src": "contracts/Invariant.sol:9",
        "version": {
          "withMetadata": "9e17eab9f310e5c4d8d06ad0600d32258a0d7cfcf29eb7d21c8bfe12833afb5c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "CenterAlignment",
          "Equalize",
          "Invariant"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LpToken": {
        "src": "contracts/LpToken.sol:17",
        "version": {
          "withMetadata": "cf0bfd84291da18c8e2881ffe1913ad23eeb421f4fcf59f9de88581658ec3583",
          "withoutMetadata": "561b8a963d6848c396965caf0bd3ff95ef41c5b2dcfa0b027528fa67b3acd7eb",
          "linkedWithoutMetadata": "561b8a963d6848c396965caf0bd3ff95ef41c5b2dcfa0b027528fa67b3acd7eb"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ERC20BurnableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable",
          "UUPSUpgradeable",
          "ERC1967Upgrade",
          "IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20BurnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Pool": {
        "src": "contracts/Pool.sol:24",
        "version": {
          "withMetadata": "2b717a2138ecf866840487077ac6446e19e6cfe77a6c2062096a0a470fea6033",
          "withoutMetadata": "51d5a41a5f3211c3cc54a56280f18a22defc32fd7ca46eb86f7f46dd9f8f8a75",
          "linkedWithoutMetadata": "51d5a41a5f3211c3cc54a56280f18a22defc32fd7ca46eb86f7f46dd9f8f8a75"
        },
        "inherit": [
          "Initializable",
          "UUPSUpgradeable",
          "ERC1967Upgrade",
          "IERC1822Proxiable",
          "IPool"
        ],
        "libraries": [
          "SafeERC20",
          "Equalize",
          "Invariant",
          "PoolMath"
        ],
        "methods": [
          "initialize(string,string,address,int8,address[],int8[],uint32,uint32,uint32,address,address)",
          "getState()",
          "getMarginalPrices()",
          "removeUniform(uint256,uint256[])",
          "add(uint256[],uint256)",
          "removeExactOutput(uint256[],uint256)",
          "removeExactBurn(uint256,uint8,uint256)",
          "swapExactInput(uint256[],uint8,uint256)",
          "swapExactOutput(uint256,uint8,uint256[])",
          "swap(uint256,uint8,uint8,uint256)",
          "setFees(uint32,uint32)",
          "adjustAmpFactor(uint32,uint32)",
          "setPaused(bool)",
          "transferGovernance(address)",
          "changeGovernanceFeeRecipient(address)",
          "upgradeLpToken(address)",
          "upgradeLpToken(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "tokenCount",
              "offset": 2,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Pool",
              "src": "contracts/Pool.sol:36"
            },
            {
              "label": "paused",
              "offset": 3,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pool",
              "src": "contracts/Pool.sol:37"
            },
            {
              "label": "totalFee",
              "offset": 4,
              "slot": "0",
              "type": "t_uint32",
              "contract": "Pool",
              "src": "contracts/Pool.sol:38"
            },
            {
              "label": "governanceFee",
              "offset": 8,
              "slot": "0",
              "type": "t_uint32",
              "contract": "Pool",
              "src": "contracts/Pool.sol:39"
            },
            {
              "label": "ampInitialValue",
              "offset": 12,
              "slot": "0",
              "type": "t_uint32",
              "contract": "Pool",
              "src": "contracts/Pool.sol:40"
            },
            {
              "label": "ampInitialTimestamp",
              "offset": 16,
              "slot": "0",
              "type": "t_uint32",
              "contract": "Pool",
              "src": "contracts/Pool.sol:41"
            },
            {
              "label": "ampTargetValue",
              "offset": 20,
              "slot": "0",
              "type": "t_uint32",
              "contract": "Pool",
              "src": "contracts/Pool.sol:42"
            },
            {
              "label": "ampTargetTimestamp",
              "offset": 24,
              "slot": "0",
              "type": "t_uint32",
              "contract": "Pool",
              "src": "contracts/Pool.sol:43"
            },
            {
              "label": "lpTokenData",
              "offset": 0,
              "slot": "1",
              "type": "t_struct(TokenWithEqualizer)5901_storage",
              "contract": "Pool",
              "src": "contracts/Pool.sol:46"
            },
            {
              "label": "poolTokensData",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_struct(TokenWithEqualizer)5901_storage)6_storage",
              "contract": "Pool",
              "src": "contracts/Pool.sol:49"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Pool",
              "src": "contracts/Pool.sol:52"
            },
            {
              "label": "governanceFeeRecipient",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Pool",
              "src": "contracts/Pool.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TokenWithEqualizer)5901_storage)6_storage": {
              "label": "struct Pool.TokenWithEqualizer[6]",
              "numberOfBytes": "192"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_int8": {
              "label": "int8",
              "numberOfBytes": "1"
            },
            "t_struct(TokenWithEqualizer)5901_storage": {
              "label": "struct Pool.TokenWithEqualizer",
              "members": [
                {
                  "label": "addr",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "equalizer",
                  "type": "t_int8",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PoolMath": {
        "src": "contracts/PoolMath.sol:11",
        "version": {
          "withMetadata": "4acfc60698c71cd624b5a92195584f44fe0d5d099b2e4783d178184c45c69811",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Invariant"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Routing": {
        "src": "contracts/Routing.sol:19",
        "version": {
          "withMetadata": "1e061949f0188a206b4d46698da61b1e9b317346aafa19f9beb7d9b1ed04bf22",
          "withoutMetadata": "c043371432e2cf9336c52674b749cf90840dc7b5ccf9047e3d0bb7995cdf7a0a",
          "linkedWithoutMetadata": "c043371432e2cf9336c52674b749cf90840dc7b5ccf9047e3d0bb7995cdf7a0a"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ReentrancyGuardUpgradeable",
          "OwnableUpgradeable",
          "PausableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "IRouting"
        ],
        "libraries": [
          "SwimPayload",
          "SafeERC20"
        ],
        "methods": [
          "initialize(address)",
          "pause()",
          "unpause()",
          "onChainSwap(address,uint256,address,address,uint256)",
          "swapAndTransfer(address,uint256,uint256,uint16,bytes32)",
          "receiveAndSwap(bytes,address,uint256)",
          "receiveAndSwap(bytes)",
          "registerToken(uint16,address,address,uint8)",
          "getPoolStates(address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "51",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "151",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "201",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "251",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "wormholeNonce",
              "offset": 0,
              "slot": "301",
              "type": "t_uint32",
              "contract": "Routing",
              "src": "contracts/Routing.sol:33"
            },
            {
              "label": "swimUsdAddress",
              "offset": 4,
              "slot": "301",
              "type": "t_address",
              "contract": "Routing",
              "src": "contracts/Routing.sol:34"
            },
            {
              "label": "tokenBridge",
              "offset": 0,
              "slot": "302",
              "type": "t_contract(ITokenBridge)10555",
              "contract": "Routing",
              "src": "contracts/Routing.sol:36"
            },
            {
              "label": "wormhole",
              "offset": 0,
              "slot": "303",
              "type": "t_contract(IWormhole)10682",
              "contract": "Routing",
              "src": "contracts/Routing.sol:37"
            },
            {
              "label": "tokenNumberMapping",
              "offset": 0,
              "slot": "304",
              "type": "t_mapping(t_uint16,t_struct(TokenInfo)9238_storage)",
              "contract": "Routing",
              "src": "contracts/Routing.sol:46"
            },
            {
              "label": "tokenAddressMapping",
              "offset": 0,
              "slot": "305",
              "type": "t_mapping(t_address,t_struct(TokenInfo)9238_storage)",
              "contract": "Routing",
              "src": "contracts/Routing.sol:47"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ITokenBridge)10555": {
              "label": "contract ITokenBridge",
              "numberOfBytes": "20"
            },
            "t_contract(IWormhole)10682": {
              "label": "contract IWormhole",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(TokenInfo)9238_storage)": {
              "label": "mapping(address => struct Routing.TokenInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_struct(TokenInfo)9238_storage)": {
              "label": "mapping(uint16 => struct Routing.TokenInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(TokenInfo)9238_storage": {
              "label": "struct Routing.TokenInfo",
              "members": [
                {
                  "label": "tokenNumber",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenAddress",
                  "type": "t_address",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "poolAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenIndexInPool",
                  "type": "t_uint8",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SwimPayload": {
        "src": "contracts/SwimPayload.sol:11",
        "version": {
          "withMetadata": "9a4727276eb87cd8c4c200608cdc1af4c31b16624de72bbd95f887e5f4f26aa1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPool": {
        "src": "contracts/interfaces/IPool.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getState()",
          "swap(uint256,uint8,uint8,uint256)",
          "swapExactOutput(uint256,uint8,uint256[])",
          "swapExactInput(uint256[],uint8,uint256)",
          "removeExactBurn(uint256,uint8,uint256)",
          "removeExactOutput(uint256[],uint256)",
          "add(uint256[],uint256)",
          "removeUniform(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IRouting": {
        "src": "contracts/interfaces/IRouting.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onChainSwap(address,uint256,address,address,uint256)",
          "swapAndTransfer(address,uint256,uint256,uint16,bytes32)",
          "receiveAndSwap(bytes,address,uint256)",
          "receiveAndSwap(bytes)",
          "registerToken(uint16,address,address,uint8)",
          "getPoolStates(address[])",
          "swimUsdAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStructs": {
        "src": "contracts/interfaces/IStructs.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITokenBridge": {
        "src": "contracts/interfaces/ITokenBridge.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferTokensWithPayload(address,uint256,uint16,bytes32,uint32,bytes)",
          "transferTokens(address,uint256,uint16,bytes32,uint256,uint32)",
          "completeTransferWithPayload(bytes)",
          "wrappedAsset(uint16,bytes32)",
          "wormhole()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWormhole": {
        "src": "contracts/interfaces/IWormhole.sol:7",
        "inherit": [
          "IStructs"
        ],
        "libraries": [],
        "methods": [
          "publishMessage(uint32,bytes,uint8)",
          "parseAndVerifyVM(bytes)",
          "verifyVM((uint8,uint32,uint32,uint16,bytes32,uint64,uint8,bytes,uint32,struct IStructs.Signature[],bytes32))",
          "verifySignatures(bytes32,struct IStructs.Signature[],(address[],uint32))",
          "parseVM(bytes)",
          "getGuardianSet(uint32)",
          "getCurrentGuardianSetIndex()",
          "getGuardianSetExpiry()",
          "governanceActionIsConsumed(bytes32)",
          "isInitialized(address)",
          "chainId()",
          "governanceChainId()",
          "governanceContract()",
          "messageFee()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "MockTokenBridge": {
        "src": "contracts/mocks/MockTokenBridge.sol:7",
        "version": {
          "withMetadata": "526e5acb906fded4b8e076c0fce83e7972ab16feb6ea88d61be49c9ecf84a480",
          "withoutMetadata": "ca4d7f577dd2c3cbf64855c029fbe898fc9f7fa713015865b0edbf169905e3dc",
          "linkedWithoutMetadata": "ca4d7f577dd2c3cbf64855c029fbe898fc9f7fa713015865b0edbf169905e3dc"
        },
        "inherit": [
          "ITokenBridge"
        ],
        "libraries": [],
        "methods": [
          "transferTokensWithPayload(address,uint256,uint16,bytes32,uint32,bytes)",
          "transferTokens(address,uint256,uint16,bytes32,uint256,uint32)",
          "completeTransferWithPayload(bytes)",
          "wrappedAsset(uint16,bytes32)",
          "wormhole()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "RoutingV2": {
        "src": "contracts/mocks/RoutingV2.sol:7",
        "version": {
          "withMetadata": "363968fe5552fcfcfaa2331f203fffdcfed0e0b70be030ec6eac0773bb705e0e",
          "withoutMetadata": "b4700868ba37c201f767d2ab02b83c03fc3e76d21261cd691679d061cfe29cfd",
          "linkedWithoutMetadata": "b4700868ba37c201f767d2ab02b83c03fc3e76d21261cd691679d061cfe29cfd"
        },
        "inherit": [
          "Routing",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ReentrancyGuardUpgradeable",
          "OwnableUpgradeable",
          "PausableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "IRouting"
        ],
        "libraries": [],
        "methods": [
          "changeTokenBridge(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "51",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "151",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "201",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "251",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "wormholeNonce",
              "offset": 0,
              "slot": "301",
              "type": "t_uint32",
              "contract": "Routing",
              "src": "contracts/Routing.sol:33"
            },
            {
              "label": "swimUsdAddress",
              "offset": 4,
              "slot": "301",
              "type": "t_address",
              "contract": "Routing",
              "src": "contracts/Routing.sol:34"
            },
            {
              "label": "tokenBridge",
              "offset": 0,
              "slot": "302",
              "type": "t_contract(ITokenBridge)10555",
              "contract": "Routing",
              "src": "contracts/Routing.sol:36"
            },
            {
              "label": "wormhole",
              "offset": 0,
              "slot": "303",
              "type": "t_contract(IWormhole)10682",
              "contract": "Routing",
              "src": "contracts/Routing.sol:37"
            },
            {
              "label": "tokenNumberMapping",
              "offset": 0,
              "slot": "304",
              "type": "t_mapping(t_uint16,t_struct(TokenInfo)9238_storage)",
              "contract": "Routing",
              "src": "contracts/Routing.sol:46"
            },
            {
              "label": "tokenAddressMapping",
              "offset": 0,
              "slot": "305",
              "type": "t_mapping(t_address,t_struct(TokenInfo)9238_storage)",
              "contract": "Routing",
              "src": "contracts/Routing.sol:47"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ITokenBridge)10555": {
              "label": "contract ITokenBridge",
              "numberOfBytes": "20"
            },
            "t_contract(IWormhole)10682": {
              "label": "contract IWormhole",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(TokenInfo)9238_storage)": {
              "label": "mapping(address => struct Routing.TokenInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_struct(TokenInfo)9238_storage)": {
              "label": "mapping(uint16 => struct Routing.TokenInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(TokenInfo)9238_storage": {
              "label": "struct Routing.TokenInfo",
              "members": [
                {
                  "label": "tokenNumber",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenAddress",
                  "type": "t_address",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "poolAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenIndexInPool",
                  "type": "t_uint8",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Token": {
        "src": "contracts/test/ERC20Token.sol:7",
        "version": {
          "withMetadata": "63c4f9dd081055a2247d2727c4c67b6dd7f4516d8583da425a3ac7589d51fcbf",
          "withoutMetadata": "d671a233069985db578042d65cc340614ba206216e11fe88c2bb933b74367485",
          "linkedWithoutMetadata": "d671a233069985db578042d65cc340614ba206216e11fe88c2bb933b74367485"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Token",
            "src": "contracts/test/ERC20Token.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:21",
        "inherit": [
          "ERC1967Upgrade",
          "IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:18",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "51",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "a253043fda9b5d1864217155ba6a5d655acd2075d2dfbcd3b6751fe5a793beaf",
          "withoutMetadata": "f3dc1a0f929b1b3284ceb0ba09f08f69b365fcd9b9738f161716f8ddfb6837bc",
          "linkedWithoutMetadata": "f3dc1a0f929b1b3284ceb0ba09f08f69b365fcd9b9738f161716f8ddfb6837bc"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20BurnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:15",
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20BurnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "7174e5e2ef9c09d5bd959b24aa13f9096d890141dd886d3335e4efca2e9f5584",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "1e9b5fa88b823ee6da03e33f878f1e8776a135eae3f56059edf447b11312bd6d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Clones": {
        "src": "@openzeppelin/contracts/proxy/Clones.sol:19",
        "version": {
          "withMetadata": "4e7fb04947ab6cd8986c7a30b78f43e9a31ec4926f242fc3615303850a12b9a9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:19",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "370216adcdae15647427b01ec7542d825573815a8d5a366945878a35752f6225",
          "withoutMetadata": "57931a7443d4193cee69dd61b3d81eee16f677161f872c93f7d6ab2d8b185d2e",
          "linkedWithoutMetadata": "57931a7443d4193cee69dd61b3d81eee16f677161f872c93f7d6ab2d8b185d2e"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "014a5a29a6b1c808eb647e375faf21336a851cf65c9484e712d675c6b1c2d0b6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "ad14a9d33d9c25c04abd63a554e69698b2629fe1eddc374b26c6026f9314a61d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:32",
        "version": {
          "withMetadata": "763aea2f3de564dd5772cacb7c955088a45d35532d11a03b36047715355513bd",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BlankLogic": {
        "src": "contracts/BlankLogic.sol:6",
        "version": {
          "withMetadata": "fecce225bb8f75d898c5b285f2d9e64be3b4972b0d00d6f62d02710b12c96c83",
          "withoutMetadata": "2c819bf26a6c6186fb1a1884f6e6e256415f423914bacd99080c4775f0291217",
          "linkedWithoutMetadata": "2c819bf26a6c6186fb1a1884f6e6e256415f423914bacd99080c4775f0291217"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967Upgrade",
          "IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CenterAlignment": {
        "src": "contracts/CenterAlignment.sol:6",
        "version": {
          "withMetadata": "39f86133c7d22923d8576bdede4c63e9a9435e4ed902da342ce004c2454f6f21",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DeterministicFactory": {
        "src": "contracts/DeterministicFactory.sol:74",
        "version": {
          "withMetadata": "eb55063243b4ef09656befe12ae0421b4bd0713cfdf7c2f6b7364842fde876c8",
          "withoutMetadata": "010983e55929001fdd3f3546524caaf55ce6a1ba5e17aca8b31858d2c69ab829",
          "linkedWithoutMetadata": "010983e55929001fdd3f3546524caaf55ce6a1ba5e17aca8b31858d2c69ab829"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "createLogic(bytes,bytes32)",
          "createProxy(address,bytes32,bytes)",
          "determineLogicAddress(bytes,bytes32)",
          "determineProxyAddress(bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DeterministicFactory",
            "src": "contracts/DeterministicFactory.sol:89"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "DeterministicFactory",
              "src": "contracts/DeterministicFactory.sol:85"
            },
            {
              "label": "reentrancyCount",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DeterministicFactory",
              "src": "contracts/DeterministicFactory.sol:86"
            },
            {
              "label": "blankLogicAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "DeterministicFactory",
              "src": "contracts/DeterministicFactory.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUUPSUpgradeable": {
        "src": "contracts/DeterministicFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Equalize": {
        "src": "contracts/Equalize.sol:8",
        "version": {
          "withMetadata": "ce13e05bb0b77e8a54b8504728bbd5a1f27795c74e545d73db2d88b4c5594fcc",
          "withoutMetadata": "26cfc0cb9508cb1a01456d0d4866f18e5140f51515fe126a1e1c6b03ecf546df",
          "linkedWithoutMetadata": "26cfc0cb9508cb1a01456d0d4866f18e5140f51515fe126a1e1c6b03ecf546df"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Invariant": {
        "src": "contracts/Invariant.sol:9",
        "version": {
          "withMetadata": "9e17eab9f310e5c4d8d06ad0600d32258a0d7cfcf29eb7d21c8bfe12833afb5c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "CenterAlignment",
          "Equalize",
          "Invariant"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LpToken": {
        "src": "contracts/LpToken.sol:17",
        "version": {
          "withMetadata": "cf0bfd84291da18c8e2881ffe1913ad23eeb421f4fcf59f9de88581658ec3583",
          "withoutMetadata": "561b8a963d6848c396965caf0bd3ff95ef41c5b2dcfa0b027528fa67b3acd7eb",
          "linkedWithoutMetadata": "561b8a963d6848c396965caf0bd3ff95ef41c5b2dcfa0b027528fa67b3acd7eb"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ERC20BurnableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable",
          "UUPSUpgradeable",
          "ERC1967Upgrade",
          "IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20BurnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Pool": {
        "src": "contracts/Pool.sol:24",
        "version": {
          "withMetadata": "2b717a2138ecf866840487077ac6446e19e6cfe77a6c2062096a0a470fea6033",
          "withoutMetadata": "51d5a41a5f3211c3cc54a56280f18a22defc32fd7ca46eb86f7f46dd9f8f8a75",
          "linkedWithoutMetadata": "51d5a41a5f3211c3cc54a56280f18a22defc32fd7ca46eb86f7f46dd9f8f8a75"
        },
        "inherit": [
          "Initializable",
          "UUPSUpgradeable",
          "ERC1967Upgrade",
          "IERC1822Proxiable",
          "IPool"
        ],
        "libraries": [
          "SafeERC20",
          "Equalize",
          "Invariant",
          "PoolMath"
        ],
        "methods": [
          "initialize(string,string,address,int8,address[],int8[],uint32,uint32,uint32,address,address)",
          "getState()",
          "getMarginalPrices()",
          "removeUniform(uint256,uint256[])",
          "add(uint256[],uint256)",
          "removeExactOutput(uint256[],uint256)",
          "removeExactBurn(uint256,uint8,uint256)",
          "swapExactInput(uint256[],uint8,uint256)",
          "swapExactOutput(uint256,uint8,uint256[])",
          "swap(uint256,uint8,uint8,uint256)",
          "setFees(uint32,uint32)",
          "adjustAmpFactor(uint32,uint32)",
          "setPaused(bool)",
          "transferGovernance(address)",
          "changeGovernanceFeeRecipient(address)",
          "upgradeLpToken(address)",
          "upgradeLpToken(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "tokenCount",
              "offset": 2,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Pool",
              "src": "contracts/Pool.sol:36"
            },
            {
              "label": "paused",
              "offset": 3,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pool",
              "src": "contracts/Pool.sol:37"
            },
            {
              "label": "totalFee",
              "offset": 4,
              "slot": "0",
              "type": "t_uint32",
              "contract": "Pool",
              "src": "contracts/Pool.sol:38"
            },
            {
              "label": "governanceFee",
              "offset": 8,
              "slot": "0",
              "type": "t_uint32",
              "contract": "Pool",
              "src": "contracts/Pool.sol:39"
            },
            {
              "label": "ampInitialValue",
              "offset": 12,
              "slot": "0",
              "type": "t_uint32",
              "contract": "Pool",
              "src": "contracts/Pool.sol:40"
            },
            {
              "label": "ampInitialTimestamp",
              "offset": 16,
              "slot": "0",
              "type": "t_uint32",
              "contract": "Pool",
              "src": "contracts/Pool.sol:41"
            },
            {
              "label": "ampTargetValue",
              "offset": 20,
              "slot": "0",
              "type": "t_uint32",
              "contract": "Pool",
              "src": "contracts/Pool.sol:42"
            },
            {
              "label": "ampTargetTimestamp",
              "offset": 24,
              "slot": "0",
              "type": "t_uint32",
              "contract": "Pool",
              "src": "contracts/Pool.sol:43"
            },
            {
              "label": "lpTokenData",
              "offset": 0,
              "slot": "1",
              "type": "t_struct(TokenWithEqualizer)5901_storage",
              "contract": "Pool",
              "src": "contracts/Pool.sol:46"
            },
            {
              "label": "poolTokensData",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_struct(TokenWithEqualizer)5901_storage)6_storage",
              "contract": "Pool",
              "src": "contracts/Pool.sol:49"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Pool",
              "src": "contracts/Pool.sol:52"
            },
            {
              "label": "governanceFeeRecipient",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Pool",
              "src": "contracts/Pool.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TokenWithEqualizer)5901_storage)6_storage": {
              "label": "struct Pool.TokenWithEqualizer[6]",
              "numberOfBytes": "192"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_int8": {
              "label": "int8",
              "numberOfBytes": "1"
            },
            "t_struct(TokenWithEqualizer)5901_storage": {
              "label": "struct Pool.TokenWithEqualizer",
              "members": [
                {
                  "label": "addr",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "equalizer",
                  "type": "t_int8",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PoolMath": {
        "src": "contracts/PoolMath.sol:11",
        "version": {
          "withMetadata": "4acfc60698c71cd624b5a92195584f44fe0d5d099b2e4783d178184c45c69811",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Invariant"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Routing": {
        "src": "contracts/Routing.sol:19",
        "version": {
          "withMetadata": "bb89040ff09aab1a697b3389651b9c0cf806ba058b646e505301383dbee379bf",
          "withoutMetadata": "370e0fe8886cb8dc63b5a0bed98db2eb91f71591af0a43a63036ac6f62b33487",
          "linkedWithoutMetadata": "370e0fe8886cb8dc63b5a0bed98db2eb91f71591af0a43a63036ac6f62b33487"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ReentrancyGuardUpgradeable",
          "OwnableUpgradeable",
          "PausableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "IRouting"
        ],
        "libraries": [
          "SwimPayload",
          "SafeERC20"
        ],
        "methods": [
          "initialize(address)",
          "pause()",
          "unpause()",
          "onChainSwap(address,uint256,address,address,uint256)",
          "swapAndTransfer(address,uint256,uint256,uint16,bytes32)",
          "receiveAndSwap(bytes,address,uint256)",
          "receiveAndSwap(bytes)",
          "registerToken(uint16,address,address,uint8)",
          "getPoolStates(address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "51",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "151",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "201",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "251",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "wormholeNonce",
              "offset": 0,
              "slot": "301",
              "type": "t_uint32",
              "contract": "Routing",
              "src": "contracts/Routing.sol:33"
            },
            {
              "label": "swimUsdAddress",
              "offset": 4,
              "slot": "301",
              "type": "t_address",
              "contract": "Routing",
              "src": "contracts/Routing.sol:34"
            },
            {
              "label": "tokenBridge",
              "offset": 0,
              "slot": "302",
              "type": "t_contract(ITokenBridge)10552",
              "contract": "Routing",
              "src": "contracts/Routing.sol:36"
            },
            {
              "label": "wormhole",
              "offset": 0,
              "slot": "303",
              "type": "t_contract(IWormhole)10679",
              "contract": "Routing",
              "src": "contracts/Routing.sol:37"
            },
            {
              "label": "tokenNumberMapping",
              "offset": 0,
              "slot": "304",
              "type": "t_mapping(t_uint16,t_struct(TokenInfo)9235_storage)",
              "contract": "Routing",
              "src": "contracts/Routing.sol:46"
            },
            {
              "label": "tokenAddressMapping",
              "offset": 0,
              "slot": "305",
              "type": "t_mapping(t_address,t_struct(TokenInfo)9235_storage)",
              "contract": "Routing",
              "src": "contracts/Routing.sol:47"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ITokenBridge)10552": {
              "label": "contract ITokenBridge",
              "numberOfBytes": "20"
            },
            "t_contract(IWormhole)10679": {
              "label": "contract IWormhole",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(TokenInfo)9235_storage)": {
              "label": "mapping(address => struct Routing.TokenInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_struct(TokenInfo)9235_storage)": {
              "label": "mapping(uint16 => struct Routing.TokenInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(TokenInfo)9235_storage": {
              "label": "struct Routing.TokenInfo",
              "members": [
                {
                  "label": "tokenNumber",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenAddress",
                  "type": "t_address",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "poolAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenIndexInPool",
                  "type": "t_uint8",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SwimPayload": {
        "src": "contracts/SwimPayload.sol:11",
        "version": {
          "withMetadata": "9a4727276eb87cd8c4c200608cdc1af4c31b16624de72bbd95f887e5f4f26aa1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPool": {
        "src": "contracts/interfaces/IPool.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getState()",
          "swap(uint256,uint8,uint8,uint256)",
          "swapExactOutput(uint256,uint8,uint256[])",
          "swapExactInput(uint256[],uint8,uint256)",
          "removeExactBurn(uint256,uint8,uint256)",
          "removeExactOutput(uint256[],uint256)",
          "add(uint256[],uint256)",
          "removeUniform(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IRouting": {
        "src": "contracts/interfaces/IRouting.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onChainSwap(address,uint256,address,address,uint256)",
          "swapAndTransfer(address,uint256,uint256,uint16,bytes32)",
          "receiveAndSwap(bytes,address,uint256)",
          "receiveAndSwap(bytes)",
          "registerToken(uint16,address,address,uint8)",
          "getPoolStates(address[])",
          "swimUsdAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStructs": {
        "src": "contracts/interfaces/IStructs.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITokenBridge": {
        "src": "contracts/interfaces/ITokenBridge.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferTokensWithPayload(address,uint256,uint16,bytes32,uint32,bytes)",
          "transferTokens(address,uint256,uint16,bytes32,uint256,uint32)",
          "completeTransferWithPayload(bytes)",
          "wrappedAsset(uint16,bytes32)",
          "wormhole()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWormhole": {
        "src": "contracts/interfaces/IWormhole.sol:7",
        "inherit": [
          "IStructs"
        ],
        "libraries": [],
        "methods": [
          "publishMessage(uint32,bytes,uint8)",
          "parseAndVerifyVM(bytes)",
          "verifyVM((uint8,uint32,uint32,uint16,bytes32,uint64,uint8,bytes,uint32,struct IStructs.Signature[],bytes32))",
          "verifySignatures(bytes32,struct IStructs.Signature[],(address[],uint32))",
          "parseVM(bytes)",
          "getGuardianSet(uint32)",
          "getCurrentGuardianSetIndex()",
          "getGuardianSetExpiry()",
          "governanceActionIsConsumed(bytes32)",
          "isInitialized(address)",
          "chainId()",
          "governanceChainId()",
          "governanceContract()",
          "messageFee()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "MockTokenBridge": {
        "src": "contracts/mocks/MockTokenBridge.sol:7",
        "version": {
          "withMetadata": "526e5acb906fded4b8e076c0fce83e7972ab16feb6ea88d61be49c9ecf84a480",
          "withoutMetadata": "ca4d7f577dd2c3cbf64855c029fbe898fc9f7fa713015865b0edbf169905e3dc",
          "linkedWithoutMetadata": "ca4d7f577dd2c3cbf64855c029fbe898fc9f7fa713015865b0edbf169905e3dc"
        },
        "inherit": [
          "ITokenBridge"
        ],
        "libraries": [],
        "methods": [
          "transferTokensWithPayload(address,uint256,uint16,bytes32,uint32,bytes)",
          "transferTokens(address,uint256,uint16,bytes32,uint256,uint32)",
          "completeTransferWithPayload(bytes)",
          "wrappedAsset(uint16,bytes32)",
          "wormhole()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "RoutingV2": {
        "src": "contracts/mocks/RoutingV2.sol:7",
        "version": {
          "withMetadata": "98318f336345331e568fca2ce6722651c28dafba827af70c024d96101ac1012b",
          "withoutMetadata": "35829f0a1d1e2946065da6d7e9b75dadcb41e7f7aa870ea8460cdfb284589a99",
          "linkedWithoutMetadata": "35829f0a1d1e2946065da6d7e9b75dadcb41e7f7aa870ea8460cdfb284589a99"
        },
        "inherit": [
          "Routing",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ReentrancyGuardUpgradeable",
          "OwnableUpgradeable",
          "PausableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "IRouting"
        ],
        "libraries": [],
        "methods": [
          "changeTokenBridge(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "51",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "151",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "201",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "251",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "wormholeNonce",
              "offset": 0,
              "slot": "301",
              "type": "t_uint32",
              "contract": "Routing",
              "src": "contracts/Routing.sol:33"
            },
            {
              "label": "swimUsdAddress",
              "offset": 4,
              "slot": "301",
              "type": "t_address",
              "contract": "Routing",
              "src": "contracts/Routing.sol:34"
            },
            {
              "label": "tokenBridge",
              "offset": 0,
              "slot": "302",
              "type": "t_contract(ITokenBridge)10552",
              "contract": "Routing",
              "src": "contracts/Routing.sol:36"
            },
            {
              "label": "wormhole",
              "offset": 0,
              "slot": "303",
              "type": "t_contract(IWormhole)10679",
              "contract": "Routing",
              "src": "contracts/Routing.sol:37"
            },
            {
              "label": "tokenNumberMapping",
              "offset": 0,
              "slot": "304",
              "type": "t_mapping(t_uint16,t_struct(TokenInfo)9235_storage)",
              "contract": "Routing",
              "src": "contracts/Routing.sol:46"
            },
            {
              "label": "tokenAddressMapping",
              "offset": 0,
              "slot": "305",
              "type": "t_mapping(t_address,t_struct(TokenInfo)9235_storage)",
              "contract": "Routing",
              "src": "contracts/Routing.sol:47"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ITokenBridge)10552": {
              "label": "contract ITokenBridge",
              "numberOfBytes": "20"
            },
            "t_contract(IWormhole)10679": {
              "label": "contract IWormhole",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(TokenInfo)9235_storage)": {
              "label": "mapping(address => struct Routing.TokenInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_struct(TokenInfo)9235_storage)": {
              "label": "mapping(uint16 => struct Routing.TokenInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(TokenInfo)9235_storage": {
              "label": "struct Routing.TokenInfo",
              "members": [
                {
                  "label": "tokenNumber",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenAddress",
                  "type": "t_address",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "poolAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenIndexInPool",
                  "type": "t_uint8",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Token": {
        "src": "contracts/test/ERC20Token.sol:7",
        "version": {
          "withMetadata": "63c4f9dd081055a2247d2727c4c67b6dd7f4516d8583da425a3ac7589d51fcbf",
          "withoutMetadata": "d671a233069985db578042d65cc340614ba206216e11fe88c2bb933b74367485",
          "linkedWithoutMetadata": "d671a233069985db578042d65cc340614ba206216e11fe88c2bb933b74367485"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Token",
            "src": "contracts/test/ERC20Token.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IDeterministicFactory": {
        "src": "contracts/interfaces/IDeterministicFactory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createLogic(bytes,bytes32)",
          "createProxy(address,bytes32,bytes)",
          "determineLogicAddress(bytes,bytes32)",
          "determineProxyAddress(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    }
  ]
}